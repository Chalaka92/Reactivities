{"version":3,"sources":["app/api/agent.ts","app/common/util/util.ts","app/stores/activityStore.ts","app/stores/userStore.ts","app/stores/commonStore.ts","app/stores/modelStore.ts","app/stores/profileStore.ts","app/stores/categoryStore.ts","app/stores/rootStore.ts","features/nav/NavBar.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityFilters.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/TextInput.tsx","app/common/form/ErrorMessage.tsx","features/user/LoginForm.tsx","features/user/RegisterForm.tsx","features/home/Homepage.tsx","app/models/activity.ts","app/common/form/TextAreaInput.tsx","app/common/form/SelectInput.tsx","app/common/form/DateInput.tsx","app/models/category.ts","app/common/photoUpload/PhotoWidgetDropzone.tsx","features/categories/form/CategoryForm.tsx","features/activities/form/ActivityForm.tsx","app/layout/LoadingComponent.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","app/layout/NotFound.tsx","app/common/modals/ModalContainer.tsx","app/common/modals/ModelContainerGeneral.tsx","features/profiles/ProfileHeader.tsx","app/common/photoUpload/PhotoWidgetCropper.tsx","app/common/photoUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileDescription.tsx","features/profiles/ProfileCard.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","serviceWorker.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["axios","defaults","baseURL","process","interceptors","request","use","config","token","window","localStorage","getItem","headers","Authorization","error","Promise","reject","response","undefined","message","toast","status","data","history","push","removeItem","info","method","errors","hasOwnProperty","responseBody","requests","url","get","then","body","post","put","delete","file","model","formData","FormData","append","JSON","stringify","list","params","details","id","create","activity","update","attend","unattend","current","login","user","register","username","uploadPhoto","photo","setMainPhoto","deletePhoto","updateProfile","profile","follow","unfollow","listFollowings","predicate","listActivities","category","setActivityProps","date","Date","isGoing","attendees","some","a","isHost","createAttendee","displayName","image","ActivityStore","observable","ref","rootStore","getActivity","activityRegistry","this","reaction","keys","page","clear","loadActivities","activities","sortedActivities","sort","b","getTime","Object","entries","reduce","toISOString","split","URLSearchParams","String","forEach","value","key","Math","ceil","activityCount","groupActivitiesByDate","Array","from","values","Map","action","set","computed","hubConnection","HubConnectionBuilder","withUrl","accessTokenFactory","commonStore","configureLogging","LogLevel","Information","build","start","console","log","state","catch","on","comment","runInAction","comments","stop","activityId","invoke","loadingInitial","agent","axiosParams","activitiesEnvelope","userStore","toJS","submitting","attendee","event","target","currentTarget","name","loading","filter","UserStore","setToken","modalStore","closeModal","CommonStore","setItem","appLoaded","ModalStore","shallow","open","header","footer","formName","content","size","modal","modalGeneral","errorMessage","ProfileStore","activeTab","loadFollowings","followings","loadingActivities","userActivities","activeIndex","loadingProfile","uploadingPhoto","photos","isMain","find","following","followersCount","profiles","CategoryStore","categories","categoryOptions","dropdownImageStyles","width","height","verticalAlign","option","text","style","src","imageUrl","success","loadCategories","closeModalGeneral","warn","CategoryName","configure","enforceActions","RootStoreContext","createContext","activityStore","profileStore","categoryStore","observer","useContext","logout","Menu","fixed","inverted","Container","Item","as","NavLink","exact","to","alt","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","Link","icon","onClick","styles","borderColor","borderWidth","ActivityListItemAttendees","List","horizontal","map","Popup","trigger","circular","bordered","ActivityListItem","host","x","Segment","Group","marginBottom","Content","Header","title","Description","Label","basic","color","Icon","format","venue","city","secondary","clearing","description","floated","marginTop","activitiesByDate","group","divided","setPredicate","vertical","attached","active","has","onChange","ActivityListItemPlaceholder","Placeholder","fluid","minHeight","Line","Paragraph","disabled","setPage","totalPages","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","hasMore","initialLoad","Loader","TextInput","input","type","placeholder","meta","touched","Form","Field","ErrorMessage","Message","statusText","length","flat","err","i","validate","combineValidators","email","isRequired","password","LoginForm","onSubmit","FORM_ERROR","render","handleSubmit","submitError","invalid","pristine","dirtySinceLastSubmit","textAlign","component","RegisterForm","Homepage","isLoggedIn","openModal","className","ActivityFormValues","init","time","assign","TextAreaInput","rows","SelectInput","options","Select","e","DateInput","rest","onBlur","onKeyDown","preventDefault","CategoryFormValues","dropzoneStyles","border","borderRadius","paddingTop","dropzoneActive","PhotoWidgetDropzone","setFiles","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","dropzoneImageStyles","emptyImageStyles","addCategory","files","composeValidators","hasLengthGreaterThan","match","createActivity","editActivity","loadActivity","openModalGeneral","setActivity","setLoading","finally","initialValues","dateAndTime","dateString","timeString","combineDateAndTime","newCategory","newActivity","uuid","widths","float","compact","LoadingComponent","Dimmer","activityImageStyle","activityImageTextStyle","bottom","left","attendActivity","cancelAttendance","padding","createHubConnection","stopHubConnection","addComment","Comment","Avatar","Author","Metadata","formatDistance","createdAt","includeSeconds","Text","form","reset","labelPosition","primary","relaxed","ribbon","Extra","NotFound","Inline","Modal","onClose","closeOnEscape","closeOnDimmerClick","negative","Actions","isCurrentUser","Statistic","label","followingCount","Divider","Reveal","animated","visible","hidden","PhotoWidgetCropper","setImage","imagePreview","cropper","useRef","aspectRatio","guides","viewMode","dragMode","scalable","cropBoxMovable","cropBoxResizable","crop","getCroppedCanvas","toBlob","blob","revokeObjectURL","sub","overflow","addPhotoMode","setAddPhotoMode","setTarget","deleteTarget","setDeleteTarget","Tab","Pane","paddingBottom","Card","itemsPerRow","bio","editMode","setEditMode","ProfileCard","extra","ProfileFollowings","panes","menuItem","pane","loadUserActivities","menu","onTabChange","handleTabChange","objectFit","Meta","ProfileActivities","ProfileContent","setActiveTab","menuPosition","loadProfile","Component","props","withRouter","location","setAppLoaded","getUser","path","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","Boolean","hostname","children","pathname","scrollTo","dateFnsLocalizer","createBrowserHistory","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.367beafa.chunk.js","sourcesContent":["import axios, { AxiosResponse } from \"axios\";\r\nimport { IActivity, IActivitiesEnvelope } from \"../models/activity\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport { IProfile, IPhoto } from \"../models/profile\";\r\nimport { ICategory, ICategoryFormValues } from \"../models/category\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.request.use(\r\n  config => {\r\n    const token = window.localStorage.getItem(\"jwt\");\r\n    if (token) config.headers.Authorization = `Bearer ${token}`;\r\n    return config;\r\n  },\r\n  error => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\naxios.interceptors.response.use(undefined, error => {\r\n  if (error.message === \"Network Error\" && !error.response) {\r\n    toast.error(\"Network error - make sure API is running!\");\r\n  }\r\n  const { status, data, config, headers } = error.response;\r\n  if (status === 404) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (\r\n    status === 401 &&\r\n    headers[\"www-authenticate\"] ===\r\n      'Bearer error=\"invalid_token\", error_description=\"The token is expired\"'\r\n  ) {\r\n    window.localStorage.removeItem(\"jwt\");\r\n    history.push(\"/\");\r\n    toast.info(\"Your session has expired, please login again\");\r\n  }\r\n  if (\r\n    status === 400 &&\r\n    config.method === \"get\" &&\r\n    data.errors.hasOwnProperty(\"id\")\r\n  ) {\r\n    history.push(\"/notfound\");\r\n  }\r\n  if (status === 500) {\r\n    toast.error(\"Server error - check the terminal for more info!\");\r\n  }\r\n  throw error.response;\r\n});\r\n\r\nconst responseBody = (response: AxiosResponse) => response.data;\r\n\r\nconst requests = {\r\n  get: (url: string) => axios.get(url).then(responseBody),\r\n  post: (url: string, body: {}) => axios.post(url, body).then(responseBody),\r\n  put: (url: string, body: {}) => axios.put(url, body).then(responseBody),\r\n  del: (url: string) => axios.delete(url).then(responseBody),\r\n  postForm: (url: string, file: Blob,model:any) => {\r\n    let formData = new FormData();\r\n    formData.append(\"File\", file);\r\n    formData.append(\"Model\", JSON.stringify(model));\r\n    return axios\r\n      .post(url, formData, {\r\n        headers: { \"Content-type\": \"multipart/form-data\" }\r\n      })\r\n      .then(responseBody);\r\n  }\r\n};\r\n\r\nconst Activities = {\r\n  list: (params: URLSearchParams): Promise<IActivitiesEnvelope> =>\r\n    axios.get(\"/activities\", { params: params }).then(responseBody),\r\n  details: (id: string) => requests.get(`/activities/${id}`),\r\n  create: (activity: IActivity) => requests.post(\"/activities\", activity),\r\n  update: (activity: IActivity) =>\r\n    requests.put(`/activities/${activity.id}`, activity),\r\n  delete: (id: string) => requests.del(`/activities/${id}`),\r\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\r\n  unattend: (id: string) => requests.del(`/activities/${id}/attend`)\r\n};\r\n\r\nconst User = {\r\n  current: (): Promise<IUser> => requests.get(\"/user\"),\r\n  login: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/login`, user),\r\n  register: (user: IUserFormValues): Promise<IUser> =>\r\n    requests.post(`/user/register`, user)\r\n};\r\n\r\nconst Profiles = {\r\n  get: (username: string): Promise<IProfile> =>\r\n    requests.get(`/profiles/${username}`),\r\n  uploadPhoto: (photo: Blob): Promise<IPhoto> =>\r\n    requests.postForm(`/photos`, photo,null),\r\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\r\n  deletePhoto: (id: string) => requests.del(`/photos/${id}`),\r\n  updateProfile: (profile: Partial<IProfile>) =>\r\n    requests.put(`/profiles`, profile),\r\n  follow: (username: string) =>\r\n    requests.post(`/profiles/${username}/follow`, {}),\r\n  unfollow: (username: string) => requests.del(`/profiles/${username}/follow`),\r\n  listFollowings: (username: string, predicate: string) =>\r\n    requests.get(`/profiles/${username}/follow?predicate=${predicate}`),\r\n  listActivities: (username: string, predicate: string) =>\r\n    requests.get(`/profiles/${username}/activities?predicate=${predicate}`)\r\n};\r\n\r\nconst Categories={\r\n  list: (): Promise<ICategory[]> => requests.get(\"/categories\"),\r\n  create: (category: ICategoryFormValues) => requests.postForm(\"/categories\", category.file,category.model),\r\n}\r\n\r\nexport default {\r\n  Activities,\r\n  User,\r\n  Profiles,\r\n  Categories\r\n};\r\n","import { IActivity, IAttendee } from \"../../models/activity\";\r\nimport { IUser } from \"../../models/user\";\r\n\r\nexport const combineDateAndTime = (date: Date, time: Date) => {\r\n  // const timeString = time.getHours() + ':' + time.getMinutes() + ':00';\r\n\r\n    // const year = date.getFullYear();\r\n    // const month = date.getMonth() + 1;\r\n    // const day = date.getDate();\r\n    // const dateString = `${year}-${month}-${day}`;\r\n\r\n    const dateString = date.toISOString().split('T')[0];\r\n    const timeString = time.toISOString().split('T')[1];\r\n\r\n    return new Date(dateString + 'T' + timeString);\r\n};\r\n\r\nexport const setActivityProps = (activity: IActivity, user: IUser) => {\r\n  activity.date = new Date(activity.date);\r\n  activity.isGoing = activity.attendees ? activity.attendees.some(\r\n    a => a.username === user.username\r\n  ):false;\r\n  activity.isHost = activity.attendees ?activity.attendees.some(\r\n    a => a.username === user.username && a.isHost\r\n  ):false;\r\n  return activity;\r\n}\r\n\r\nexport const createAttendee = (user: IUser): IAttendee => {\r\n  return {\r\n      displayName: user.displayName,\r\n      isHost: false,\r\n      username: user.username,\r\n      image: user.image!\r\n  }\r\n}","import {\r\n  observable,\r\n  action,\r\n  computed,\r\n  runInAction,\r\n  reaction,\r\n  toJS\r\n} from \"mobx\";\r\nimport { SyntheticEvent } from \"react\";\r\nimport { IActivity } from \"../models/activity\";\r\nimport agent from \"../api/agent\";\r\nimport { history } from \"../..\";\r\nimport { toast } from \"react-toastify\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { setActivityProps, createAttendee } from \"../common/util/util\";\r\nimport { HubConnection, HubConnectionBuilder, LogLevel } from \"@aspnet/signalr\";\r\n\r\nconst LIMIT = 2;\r\n\r\nexport default class ActivityStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.predicate.keys(),\r\n      () => {\r\n        this.page = 0;\r\n        this.activityRegistry.clear();\r\n        this.loadActivities();\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable activityRegistry = new Map();\r\n  @observable activity: IActivity | null = null;\r\n  @observable loadingInitial = false;\r\n  @observable submitting = false;\r\n  @observable target = \"\";\r\n  @observable loading = false;\r\n  @observable.ref hubConnection: HubConnection | null = null;\r\n  @observable activityCount = 0;\r\n  @observable page = 0;\r\n  @observable predicate = new Map();\r\n\r\n  @action setPredicate = (predicate: string, value: string | Date) => {\r\n    this.predicate.clear();\r\n    if (predicate !== \"all\") {\r\n      this.predicate.set(predicate, value);\r\n    }\r\n  };\r\n\r\n  @computed get axiosParams() {\r\n    const params = new URLSearchParams();\r\n    params.append(\"limit\", String(LIMIT));\r\n    params.append(\"offset\", `${this.page ? this.page * LIMIT : 0}`);\r\n    this.predicate.forEach((value, key) => {\r\n      if (key === \"startDate\") {\r\n        params.append(key, value.toISOString());\r\n      } else {\r\n        params.append(key, value);\r\n      }\r\n    });\r\n    return params;\r\n  }\r\n\r\n  @computed get totalPages() {\r\n    return Math.ceil(this.activityCount / LIMIT);\r\n  }\r\n\r\n  @action setPage = (page: number) => {\r\n    this.page = page;\r\n  };\r\n\r\n  @action createHubConnection = () => {\r\n    this.hubConnection = new HubConnectionBuilder()\r\n      .withUrl(process.env.REACT_APP_API_CHAT_URL!, {\r\n        accessTokenFactory: () => this.rootStore.commonStore.token!\r\n      })\r\n      .configureLogging(LogLevel.Information)\r\n      .build();\r\n\r\n    this.hubConnection\r\n      .start()\r\n      .then(() => console.log(this.hubConnection!.state))\r\n      .catch(error => console.log(\"Error establishing connection: \", error));\r\n\r\n    this.hubConnection.on(\"ReceiveComment\", comment => {\r\n      runInAction(() => {\r\n        this.activity!.comments.push(comment);\r\n      });\r\n    });\r\n  };\r\n\r\n  @action stopHubConnection = () => {\r\n    this.hubConnection!.stop();\r\n  };\r\n\r\n  @action addComment = async (values: any) => {\r\n    values.activityId = this.activity!.id;\r\n    try {\r\n      await this.hubConnection!.invoke(\"SendComment\", values);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @computed get activitiesByDate() {\r\n    return this.groupActivitiesByDate(\r\n      Array.from(this.activityRegistry.values())\r\n    );\r\n  }\r\n\r\n  groupActivitiesByDate(activities: IActivity[]) {\r\n    const sortedActivities = activities.sort(\r\n      (a, b) => a.date!.getTime() - b.date!.getTime()\r\n    );\r\n    return Object.entries(\r\n      sortedActivities.reduce((activities, activity) => {\r\n        const date = activity.date.toISOString().split(\"T\")[0];\r\n        activities[date] = activities[date]\r\n          ? [...activities[date], activity]\r\n          : [activity];\r\n        return activities;\r\n      }, {} as { [key: string]: IActivity[] })\r\n    );\r\n  }\r\n\r\n  @action loadActivities = async () => {\r\n    this.loadingInitial = true;\r\n    try {\r\n      const activitiesEnvelope = await agent.Activities.list(this.axiosParams);\r\n      const { activities, activityCount } = activitiesEnvelope;\r\n      console.log(activities);\r\n\r\n      runInAction(\"loading activities\", () => {\r\n        activities.forEach(activity => {\r\n          activity.date = new Date(activity.date);\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activityRegistry.set(activity.id, activity);\r\n        });\r\n        this.activityCount = activityCount;\r\n        this.loadingInitial = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(\"load activities error\", () => {\r\n        this.loadingInitial = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadActivity = async (id: string) => {\r\n    let activity = this.getActivity(id);\r\n    if (activity) {\r\n      this.activity = activity;\r\n      return toJS(activity);\r\n    } else {\r\n      this.loadingInitial = true;\r\n\r\n      try {\r\n        activity = await agent.Activities.details(id);\r\n        runInAction(\"getting activity\", () => {\r\n          setActivityProps(activity, this.rootStore.userStore.user!);\r\n          this.activity = activity;\r\n          this.activityRegistry.set(activity.id, activity);\r\n          this.loadingInitial = false;\r\n        });\r\n        return activity;\r\n      } catch (error) {\r\n        runInAction(\"get activity error\", () => {\r\n          this.loadingInitial = false;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  @action clearActivity = () => {\r\n    this.activity = null;\r\n  };\r\n\r\n  getActivity = (id: string) => {\r\n    return this.activityRegistry.get(id);\r\n  };\r\n\r\n  @action createActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.create(activity);\r\n      const attendee = createAttendee(this.rootStore.userStore.user!);\r\n      attendee.isHost = true;\r\n      let attendees = [];\r\n      attendees.push(attendee);\r\n      activity.attendees = attendees;\r\n      activity.comments = [];\r\n      activity.isHost = true;\r\n      runInAction(\"creating activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"create activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action editActivity = async (activity: IActivity) => {\r\n    this.submitting = true;\r\n    try {\r\n      await agent.Activities.update(activity);\r\n      runInAction(\"editing activity\", () => {\r\n        this.activityRegistry.set(activity.id, activity);\r\n        this.activity = activity;\r\n        this.submitting = false;\r\n      });\r\n      history.push(`/activities/${activity.id}`);\r\n    } catch (error) {\r\n      runInAction(\"edit activity error\", () => {\r\n        this.submitting = false;\r\n      });\r\n      toast.error(\"Problem submitting data\");\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action deleteActivity = async (\r\n    event: SyntheticEvent<HTMLButtonElement>,\r\n    id: string\r\n  ) => {\r\n    this.submitting = true;\r\n    this.target = event.currentTarget.name;\r\n    try {\r\n      await agent.Activities.delete(id);\r\n      runInAction(\"deleting activity\", () => {\r\n        this.activityRegistry.delete(id);\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n    } catch (error) {\r\n      runInAction(\"delete activity error\", () => {\r\n        this.submitting = false;\r\n        this.target = \"\";\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action attendActivity = async () => {\r\n    const attendee = createAttendee(this.rootStore.userStore.user!);\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.attend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees.push(attendee);\r\n          this.activity.isGoing = true;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem signing up to activity\");\r\n    }\r\n  };\r\n\r\n  @action cancelAttendance = async () => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Activities.unattend(this.activity!.id);\r\n      runInAction(() => {\r\n        if (this.activity) {\r\n          this.activity.attendees = this.activity.attendees.filter(\r\n            a => a.username !== this.rootStore.userStore.user!.username\r\n          );\r\n          this.activity.isGoing = false;\r\n          this.activityRegistry.set(this.activity.id, this.activity);\r\n          this.loading = false;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n      toast.error(\"Problem cancelling attendance\");\r\n    }\r\n  };\r\n}\r\n","import { observable, computed, action, runInAction } from \"mobx\";\r\nimport { IUser, IUserFormValues } from \"../models/user\";\r\nimport agent from \"../api/agent\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport { history } from \"../..\";\r\n\r\nexport default class UserStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable user: IUser | null = null;\r\n\r\n  @computed get isLoggedIn() {\r\n    return this.user;\r\n  }\r\n\r\n  @action login = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.login(values);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push(\"/activities\");\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  @action register = async (values: IUserFormValues) => {\r\n    try {\r\n      const user = await agent.User.register(values);\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n      this.rootStore.commonStore.setToken(user.token);\r\n      this.rootStore.modalStore.closeModal();\r\n      history.push('/activities')\r\n    } catch (error) {\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  @action getUser = async () => {\r\n    try {\r\n      const user = await agent.User.current();\r\n      runInAction(() => {\r\n        this.user = user;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action logout = () => {\r\n    this.rootStore.commonStore.setToken(null);\r\n    this.user = null;\r\n    history.push('/');\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, reaction } from \"mobx\";\r\n\r\nexport default class CommonStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.token,\r\n      token => {\r\n        if (token) {\r\n          window.localStorage.setItem(\"jwt\", token);\r\n        } else {\r\n          window.localStorage.removeItem(\"jwt\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable token: string | null = window.localStorage.getItem('jwt');\r\n  @observable appLoaded = false;\r\n\r\n  @action setToken = (token: string | null) => {\r\n    window.localStorage.setItem(\"jwt\", token!);\r\n    this.token = token;\r\n  };\r\n\r\n  @action setAppLoaded = () => {\r\n    this.appLoaded = true;\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action } from \"mobx\";\r\n\r\nexport default class ModalStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable size: any;\r\n  @observable errorMessage: any;\r\n  @observable submitting: boolean=false;\r\n\r\n  @observable.shallow modal = {\r\n    open: false,\r\n    body: null,\r\n  };\r\n\r\n  @observable.shallow modalGeneral = {\r\n    open: false,\r\n    body: null,\r\n    header: null,\r\n    footer: null,\r\n    formName:null,\r\n  };\r\n\r\n  @action openModal = (content: any, size: any) => {\r\n    this.modal.open = true;\r\n    this.size = size;\r\n    this.modal.body = content;\r\n  };\r\n\r\n  @action closeModal = () => {\r\n    this.modal.open = false;\r\n    this.size = \"small\";\r\n    this.modal.body = null;\r\n  };\r\n\r\n  @action openModalGeneral = (\r\n    header: any,\r\n    content: any,\r\n    footer: any,\r\n    size: any,\r\n    formName:any\r\n  ) => {\r\n    this.modalGeneral.open = true;\r\n    this.size = size;\r\n    this.modalGeneral.header = header;\r\n    this.modalGeneral.body = content;\r\n    this.modalGeneral.footer = footer;\r\n    this.modalGeneral.formName = formName;\r\n  };\r\n\r\n  @action closeModalGeneral = () => {\r\n    this.modalGeneral.open = false;\r\n    this.size = \"small\";\r\n    this.modalGeneral.header = null;\r\n    this.modalGeneral.body = null;\r\n    this.modalGeneral.footer = null;\r\n    this.modalGeneral.formName = null;\r\n    this.errorMessage=null;\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction, computed, reaction } from \"mobx\";\r\nimport { IProfile, IPhoto, IUserActivity } from \"../models/profile\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class ProfileStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      activeTab => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  @observable profile: IProfile | null = null;\r\n  @observable loadingProfile = true;\r\n  @observable uploadingPhoto = false;\r\n  @observable loading = false;\r\n  @observable followings: IProfile[] = [];\r\n  @observable activeTab: number = 0;\r\n  @observable userActivities: IUserActivity[] = [];\r\n  @observable loadingActivities = false;\r\n\r\n  @computed get isCurrentUser() {\r\n    if (this.rootStore.userStore.user && this.profile) {\r\n      return this.rootStore.userStore.user.username === this.profile.username;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  @action loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem loading activities\");\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setActiveTab = (activeIndex: number) => {\r\n    this.activeTab = activeIndex;\r\n  };\r\n\r\n  @action loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => {\r\n        this.profile = profile;\r\n        this.loadingProfile = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.loadingProfile = false;\r\n      });\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action uploadPhoto = async (file: Blob) => {\r\n    this.uploadingPhoto = true;\r\n    try {\r\n      const photo = await agent.Profiles.uploadPhoto(file);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos.push(photo);\r\n          if (photo.isMain && this.rootStore.userStore.user) {\r\n            this.rootStore.userStore.user.image = photo.url;\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n        this.uploadingPhoto = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      toast.error(\"Problem uploading photo\");\r\n      runInAction(() => {\r\n        this.uploadingPhoto = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action setMainPhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      runInAction(() => {\r\n        this.rootStore.userStore.user!.image = photo.url;\r\n        this.profile!.photos.find(a => a.isMain)!.isMain = false;\r\n        this.profile!.photos.find(a => a.id === photo.id)!.isMain = true;\r\n        this.profile!.image = photo.url;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem setting photo as main\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action deletePhoto = async (photo: IPhoto) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        this.profile!.photos = this.profile!.photos.filter(\r\n          a => a.id !== photo.id\r\n        );\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem deleting the photo\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action updateProfile = async (profile: Partial<IProfile>) => {\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName !== this.rootStore.userStore.user!.displayName\r\n        ) {\r\n          this.rootStore.userStore.user!.displayName = profile.displayName!;\r\n        }\r\n        this.profile = { ...this.profile!, ...profile };\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem updating profile\");\r\n    }\r\n  };\r\n\r\n  @action follow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.follow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = true;\r\n        this.profile!.followersCount++;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem following user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action unfollow = async (username: string) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.unfollow(username);\r\n      runInAction(() => {\r\n        this.profile!.following = false;\r\n        this.profile!.followersCount--;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem unfollowing user\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  @action loadFollowings = async (predicate: string) => {\r\n    this.loading = true;\r\n    try {\r\n      const profiles = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = profiles;\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      toast.error(\"Problem loading followings\");\r\n      runInAction(() => {\r\n        this.loading = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import { RootStore } from \"./rootStore\";\r\nimport { observable, action, runInAction } from \"mobx\";\r\nimport { ICategory, ICategoryFormValues } from \"../models/category\";\r\nimport agent from \"../api/agent\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default class CategoryStore {\r\n  rootStore: RootStore;\r\n  constructor(rootStore: RootStore) {\r\n    this.rootStore = rootStore;\r\n  }\r\n\r\n  @observable category: ICategoryFormValues | null = null;\r\n  @observable categories: ICategory[] = [];\r\n  @observable categoryOptions: any = [];\r\n  @observable addingCategory: boolean = false;\r\n\r\n  @action loadCategories = async () => {\r\n    try {\r\n      const categories = await agent.Categories.list();\r\n\r\n      const categoryOptions: any = [];\r\n\r\n      const dropdownImageStyles = {\r\n        width: \"50px\",\r\n        height: \"25px\",\r\n        verticalAlign: \"middle\",\r\n      };\r\n\r\n      categories.forEach((value, key) => {\r\n        const option = {\r\n          key: key,\r\n          text: value.name,\r\n          value: value.id,\r\n          image: { style: dropdownImageStyles, src: value.imageUrl },\r\n        };\r\n        categoryOptions.push(option);\r\n      });\r\n\r\n      runInAction(() => {\r\n        this.categories = categories;\r\n        this.categoryOptions = categoryOptions;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  @action addCategory = async (category: ICategoryFormValues) => {\r\n    this.rootStore.modalStore.submitting = true;\r\n    try {\r\n      this.rootStore.modalStore.errorMessage = null;\r\n      if (category.file) {\r\n        await agent.Categories.create(category);\r\n        toast.success(\"Category added successfully.\");\r\n        runInAction(() => {\r\n          this.loadCategories();\r\n          this.rootStore.modalStore.submitting = false;\r\n          this.rootStore.modalStore.closeModalGeneral();\r\n        });\r\n      } else {\r\n        toast.warn(\"⚠️ Upload a category image\");\r\n        this.rootStore.modalStore.submitting = false;\r\n      }\r\n    } catch (error) {\r\n      runInAction(() => {\r\n        this.rootStore.modalStore.errorMessage = error.data.errors.CategoryName;\r\n        this.rootStore.modalStore.submitting = false;\r\n      });\r\n    }\r\n  };\r\n}\r\n","import ActivityStore from \"./activityStore\";\r\nimport UserStore from \"./userStore\";\r\nimport { createContext } from \"react\";\r\nimport { configure} from \"mobx\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modelStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport CategoryStore from \"./categoryStore\";\r\n\r\nconfigure({ enforceActions: \"always\" });\r\n\r\nexport class RootStore {\r\n  activityStore: ActivityStore;\r\n  userStore: UserStore;\r\n  commonStore:CommonStore;\r\n  modalStore:ModalStore;\r\n  profileStore:ProfileStore;\r\n  categoryStore:CategoryStore;\r\n\r\n\r\n  constructor() {\r\n    this.activityStore = new ActivityStore(this);\r\n    this.userStore = new UserStore(this);\r\n    this.commonStore = new CommonStore(this);\r\n    this.modalStore = new ModalStore(this);\r\n    this.profileStore = new ProfileStore(this);\r\n    this.categoryStore = new CategoryStore(this);\r\n  }\r\n}\r\n\r\nexport const RootStoreContext = createContext(new RootStore());\r\n","import React, { useContext } from \"react\";\r\nimport { Menu, Container, Button, Dropdown, Image } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\n\r\nconst NavBar: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {  user,logout } = rootStore.userStore;\r\n  return (\r\n    <Menu fixed=\"top\" inverted>\r\n      <Container>\r\n        <Menu.Item header as={NavLink} exact to=\"/\">\r\n          <img\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginRight: \"10px\" }}\r\n          />\r\n          Reactivities\r\n        </Menu.Item>\r\n        <Menu.Item name=\"Activities\" as={NavLink} to=\"/activities\" />\r\n        <Menu.Item>\r\n          <Button\r\n            as={NavLink}\r\n            to=\"/createActivity\"\r\n            positive\r\n            content=\"Create Activity\"\r\n          />\r\n        </Menu.Item>\r\n        {user && (\r\n          <Menu.Item position=\"right\">\r\n            <Image avatar spaced=\"right\" src={user.image || \"/assets/user.png\"} />\r\n            <Dropdown pointing=\"top left\" text={user.displayName}>\r\n              <Dropdown.Menu>\r\n                <Dropdown.Item\r\n                  as={Link}\r\n                  to={`/profile/${user.username}`}\r\n                  text=\"My profile\"\r\n                  icon=\"user\"\r\n                />\r\n                <Dropdown.Item onClick={logout} text=\"Logout\" icon=\"power\" />\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </Menu.Item>\r\n        )}\r\n      </Container>\r\n    </Menu>\r\n  );\r\n};\r\n\r\nexport default observer(NavBar);\r\n","import React from \"react\";\r\nimport { List, Image, Popup } from \"semantic-ui-react\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst styles = {\r\n  borderColor: 'orange',\r\n  borderWidth: 2\r\n}\r\n\r\nconst ActivityListItemAttendees: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <List horizontal>\r\n      {attendees.map(attendee => (\r\n        <List.Item key={attendee.username}>\r\n          <Popup\r\n            header={attendee.displayName}\r\n            trigger={\r\n              <Image\r\n                size=\"mini\"\r\n                circular\r\n                src={attendee.image || \"assets/user.png\"}\r\n                bordered\r\n                style={attendee.following ? styles : null}\r\n                as={Link} to={`/profile/${attendee.username}`}\r\n              />\r\n            }\r\n          />\r\n        </List.Item>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default ActivityListItemAttendees;\r\n","import React from \"react\";\r\nimport { Item, Button, Segment, Icon, Label } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\r\n\r\nconst ActivityListItem: React.FC<{ activity: IActivity }> = ({ activity }) => {\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n  return (\r\n    <Segment.Group>\r\n      <Segment>\r\n        <Item.Group>\r\n          <Item>\r\n            <Item.Image\r\n              size=\"tiny\"\r\n              circular\r\n              src={host.image || \"/assets/user.png\"}\r\n              style={{ marginBottom: 3 }}\r\n            />\r\n            <Item.Content>\r\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\r\n                {activity.title}\r\n              </Item.Header>\r\n              <Item.Description>\r\n                Hosted By\r\n                <Link to={`/profile/${host.username}`}>\r\n                  {\" \"}\r\n                  {host.displayName}\r\n                </Link>\r\n              </Item.Description>\r\n              {activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"orange\"\r\n                    content=\"You are hosting this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n              {activity.isGoing && !activity.isHost && (\r\n                <Item.Description>\r\n                  <Label\r\n                    basic\r\n                    color=\"green\"\r\n                    content=\"You are going to this activity\"\r\n                  />\r\n                </Item.Description>\r\n              )}\r\n            </Item.Content>\r\n          </Item>\r\n        </Item.Group>\r\n      </Segment>\r\n      <Segment>\r\n        <Icon name=\"clock\" />\r\n        {format(activity.date, \"h:mm a\")}\r\n        <Icon name=\"marker\" />\r\n        {activity.venue},{activity.city}\r\n      </Segment>\r\n      <Segment secondary>\r\n        <ActivityListItemAttendees attendees={activity.attendees} />\r\n      </Segment>\r\n      <Segment clearing>\r\n        <span>{activity.description}</span>\r\n        <br/>\r\n        <Button\r\n          as={Link}\r\n          to={`/activities/${activity.id}`}\r\n          floated=\"right\"\r\n          content=\"View\"\r\n          color=\"blue\"\r\n          style={{marginTop:5}}\r\n        />\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default ActivityListItem;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Item, Label } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport ActivityListItem from \"./ActivityListItem\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport {format} from 'date-fns'\r\n\r\nconst ActivityList: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n\r\n  const { activitiesByDate } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      {activitiesByDate.map(([group, activities]) => (\r\n        <Fragment key={group}>\r\n          <Label size=\"large\" color=\"blue\">\r\n            {format(group,'eeee do MMMM')}\r\n          </Label>\r\n          <Item.Group divided>\r\n            {activities.map(activity => (\r\n              <ActivityListItem key={activity.id} activity={activity} />\r\n            ))}\r\n          </Item.Group>\r\n        </Fragment>\r\n      ))}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityList);\r\n","import React, { Fragment, useContext } from 'react';\r\nimport { Menu, Header } from 'semantic-ui-react';\r\nimport { Calendar } from 'react-widgets';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ActivityFilters = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { predicate, setPredicate } = rootStore.activityStore;\r\n  return (\r\n    <Fragment>\r\n      <Menu vertical size={'large'} style={{ width: '100%', marginTop: 50 }}>\r\n        <Header icon={'filter'} attached color={'teal'} content={'Filters'} />\r\n        <Menu.Item\r\n          active={predicate.size === 0}\r\n          onClick={() => setPredicate('all', 'true')}\r\n          color={'blue'}\r\n          name={'all'}\r\n          content={'All Activities'}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isGoing')}\r\n          onClick={() => setPredicate('isGoing', 'true')}\r\n          color={'blue'}\r\n          name={'username'}\r\n          content={\"I'm Going\"}\r\n        />\r\n        <Menu.Item\r\n          active={predicate.has('isHost')}\r\n          onClick={() => setPredicate('isHost', 'true')}\r\n          color={'blue'}\r\n          name={'host'}\r\n          content={\"I'm hosting\"}\r\n        />\r\n      </Menu>\r\n      <Header\r\n        icon={'calendar'}\r\n        attached\r\n        color={'teal'}\r\n        content={'Select Date'}\r\n      />\r\n      <Calendar\r\n        onChange={date => setPredicate('startDate', date!)}\r\n        value={predicate.get('startDate') || new Date()}\r\n      />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityFilters);\r\n","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nconst ActivityListItemPlaceholder = () => {\r\n  return (\r\n    <Fragment>\r\n      <Placeholder fluid style={{ marginTop: 50 }}>\r\n        <Segment.Group>\r\n          <Segment style={{ minHeight: 110 }}>\r\n            <Placeholder>\r\n              <Placeholder.Header image>\r\n                <Placeholder.Line />\r\n                <Placeholder.Line />\r\n              </Placeholder.Header>\r\n              <Placeholder.Paragraph>\r\n                <Placeholder.Line />\r\n              </Placeholder.Paragraph>\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment>\r\n            <Placeholder>\r\n              <Placeholder.Line />\r\n              <Placeholder.Line />\r\n            </Placeholder>\r\n          </Segment>\r\n          <Segment secondary style={{ minHeight: 70 }} />\r\n          <Segment clearing>\r\n            <Button disabled color='blue' floated='right' content='View' />\r\n          </Segment>\r\n        </Segment.Group>\r\n      </Placeholder>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default ActivityListItemPlaceholder;","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { Grid, Loader } from \"semantic-ui-react\";\r\nimport ActivityList from \"./ActivityList\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport InfiniteScroll from \"react-infinite-scroller\";\r\nimport ActivityFilters from \"./ActivityFilters\";\r\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\r\n\r\nconst ActivityDashboard: React.FC = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadActivities,\r\n    loadingInitial,\r\n    setPage,\r\n    page,\r\n    totalPages\r\n  } = rootStore.activityStore;\r\n  const [loadingNext, setLoadingNext] = useState(false);\r\n\r\n  const handleGetNext = () => {\r\n    setLoadingNext(true);\r\n    setPage(page + 1);\r\n    loadActivities().then(() => setLoadingNext(false));\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadActivities();\r\n  }, [loadActivities]);\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        {loadingInitial && page === 0 ? (\r\n          <ActivityListItemPlaceholder />\r\n        ) : (\r\n          <InfiniteScroll\r\n            pageStart={0}\r\n            loadMore={handleGetNext}\r\n            hasMore={!loadingNext && page + 1 < totalPages}\r\n            initialLoad={false}\r\n          >\r\n            <ActivityList />\r\n          </InfiniteScroll>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityFilters />\r\n      </Grid.Column>\r\n      <Grid.Column width={10}>\r\n        <Loader active={loadingNext} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDashboard);\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLInputElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  type,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} type={type} width={width}>\r\n      <input {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from 'react';\r\nimport { AxiosResponse } from 'axios';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface IProps {\r\n  error: AxiosResponse;\r\n  text?: string;\r\n}\r\n\r\nconst ErrorMessage: React.FC<IProps> = ({ error, text }) => {\r\n  return (\r\n    <Message error>\r\n      <Message.Header>{error.statusText}</Message.Header>\r\n      {error.data && Object.keys(error.data.errors).length > 0 && (\r\n        <Message.List>\r\n          {Object.values(error.data.errors).flat().map((err, i) => (\r\n            <Message.Item key={i}>{err}</Message.Item>\r\n          ))}\r\n        </Message.List>\r\n      )}\r\n      {text && <Message.Content content={text} />}\r\n    </Message>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport { Form, Button, Header } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport { IUserFormValues } from \"../../app/models/user\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport ErrorMessage from \"../../app/common/form/ErrorMessage\";\r\n\r\nconst validate = combineValidators({\r\n  email: isRequired(\"email\"),\r\n  password: isRequired(\"password\")\r\n});\r\n\r\nconst LoginForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { login } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        login(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit}>\r\n          <Header\r\n            as=\"h2\"\r\n            content=\"Login to Reactivities\"\r\n            color=\"teal\"\r\n            textAlign=\"center\"\r\n          />\r\n          <Field name=\"email\" component={TextInput} placeholder=\"Email\" />\r\n          <Field\r\n            name=\"password\"\r\n            component={TextInput}\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n              text=\"Invalid email or password\"\r\n            />\r\n          )}\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            content=\"LogIn\"\r\n            color=\"teal\"\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useContext } from 'react';\r\nimport { Form as FinalForm, Field } from 'react-final-form';\r\nimport { Form, Button, Header } from 'semantic-ui-react';\r\nimport TextInput from '../../app/common/form/TextInput';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport { IUserFormValues } from '../../app/models/user';\r\nimport { FORM_ERROR } from 'final-form';\r\nimport { combineValidators, isRequired } from 'revalidate';\r\nimport ErrorMessage from '../../app/common/form/ErrorMessage';\r\n\r\nconst validate = combineValidators({\r\n  username: isRequired('Username'),\r\n  displayName: isRequired('DisplayName'),\r\n  email: isRequired('Email'),\r\n  password: isRequired('Password')\r\n});\r\n\r\nconst RegisterForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { register } = rootStore.userStore;\r\n  return (\r\n    <FinalForm\r\n      onSubmit={(values: IUserFormValues) =>\r\n        register(values).catch(error => ({\r\n          [FORM_ERROR]: error\r\n        }))\r\n      }\r\n      validate={validate}\r\n      render={({\r\n        handleSubmit,\r\n        submitting,\r\n        submitError,\r\n        invalid,\r\n        pristine,\r\n        dirtySinceLastSubmit\r\n      }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Header\r\n            as='h2'\r\n            content='Sign up to Reactivities'\r\n            color='teal'\r\n            textAlign='center'\r\n          />\r\n          <Field name='username' component={TextInput} placeholder='Username' />\r\n          <Field\r\n            name='displayName'\r\n            component={TextInput}\r\n            placeholder='Display Name'\r\n          />\r\n          <Field name='email' component={TextInput} placeholder='Email' />\r\n          <Field\r\n            name='password'\r\n            component={TextInput}\r\n            placeholder='Password'\r\n            type='password'\r\n          />\r\n          {submitError && !dirtySinceLastSubmit && (\r\n            <ErrorMessage\r\n              error={submitError}\r\n            />\r\n          )}\r\n          <Button\r\n            disabled={(invalid && !dirtySinceLastSubmit) || pristine}\r\n            loading={submitting}\r\n            color='teal'\r\n            content='Register'\r\n            fluid\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useContext, Fragment } from \"react\";\r\nimport { Container, Segment, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport LoginForm from \"../user/LoginForm\";\r\nimport RegisterForm from \"../user/RegisterForm\";\r\n\r\nconst Homepage = () => {\r\n  const token = window.localStorage.getItem(\"jwt\");\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn, user } = rootStore.userStore;\r\n  const { openModal } = rootStore.modalStore;\r\n  return (\r\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\r\n      <Container text>\r\n        <Header as=\"h1\" inverted>\r\n          <Image\r\n            size=\"massive\"\r\n            src=\"/assets/logo.png\"\r\n            alt=\"logo\"\r\n            style={{ marginBottom: 12 }}\r\n          />\r\n          Reactivities@@@@\r\n        </Header>\r\n        {isLoggedIn && user && token ? (\r\n          <Fragment>\r\n            <Header\r\n              as=\"h2\"\r\n              inverted\r\n              content={`Welcome back ${user.displayName}`}\r\n            />\r\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\r\n              Go to activities\r\n            </Button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\r\n            <Button\r\n              onClick={() => openModal(<LoginForm />,'mini')}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              onClick={() => openModal(<RegisterForm />,'mini')}\r\n              size=\"huge\"\r\n              inverted\r\n            >\r\n              Register\r\n            </Button>\r\n          </Fragment>\r\n        )}\r\n      </Container>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default Homepage;\r\n","import { ICategory } from \"./category\";\r\n\r\nexport interface IActivitiesEnvelope {\r\n  activities: IActivity[];\r\n  activityCount: number;\r\n}\r\n\r\nexport interface IActivity {\r\n  id: string;\r\n  title: string;\r\n  description: string;\r\n  category: any;\r\n  date: Date;\r\n  city: string;\r\n  venue: string;\r\n  isGoing:boolean;\r\n  isHost:boolean;\r\n  attendees: IAttendee[];\r\n  comments: IComment[];\r\n}\r\n\r\nexport interface IComment {\r\n    id: string;\r\n    createdAt: Date;\r\n    body: string;\r\n    username: string;\r\n    displayName: string;\r\n    image: string;\r\n}\r\n\r\nexport interface IActivityFormValues extends Partial<IActivity> {\r\n  time?: Date;\r\n}\r\n\r\nexport class ActivityFormValues implements IActivityFormValues {\r\n  id?: string = undefined;\r\n  title: string = \"\";\r\n  category: ICategory|undefined=undefined;\r\n  description: string = \"\";\r\n  date?: Date = undefined;\r\n  time?: Date = undefined;\r\n  city: string = \"\";\r\n  venue: string = \"\";\r\n\r\n  constructor(init?: IActivityFormValues) {\r\n    if (init && init.date) {\r\n      init.time = init.date;\r\n    }\r\n    Object.assign(this, init);\r\n  }\r\n}\r\n\r\nexport interface IAttendee {\r\n  username: string;\r\n  displayName: string;\r\n  image: string;\r\n  isHost: boolean;\r\n  following?: boolean;\r\n}\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLTextAreaElement>,\r\n    FormFieldProps {}\r\n\r\nconst TextAreaInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  rows,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <textarea rows={rows} {...input} placeholder={placeholder} />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default TextAreaInput;\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label, Select } from \"semantic-ui-react\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<string, HTMLSelectElement>,\r\n    FormFieldProps {}\r\n\r\nconst SelectInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  options,\r\n  placeholder,\r\n  meta: { touched, error }\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <Select\r\n        value={input.value}\r\n        onChange={(e, data) => input.onChange(data.value)}\r\n        placeholder={placeholder}\r\n        options={options}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default SelectInput;\r\n","import React from \"react\";\r\nimport { FieldRenderProps } from \"react-final-form\";\r\nimport { FormFieldProps, Form, Label } from \"semantic-ui-react\";\r\nimport { DateTimePicker } from \"react-widgets\";\r\n\r\ninterface IProps\r\n  extends FieldRenderProps<Date, HTMLInputElement>,\r\n    FormFieldProps {}\r\n\r\nconst DateInput: React.FC<IProps> = ({\r\n  input,\r\n  width,\r\n  placeholder,\r\n  date = false,\r\n  time = false,\r\n  meta: { touched, error },\r\n  ...rest\r\n}) => {\r\n  return (\r\n    <Form.Field error={touched && !!error} width={width}>\r\n      <DateTimePicker\r\n        placeholder={placeholder}\r\n        value={input.value || null}\r\n        onChange={input.onChange}\r\n        onBlur={input.onBlur}\r\n        onKeyDown={e => e.preventDefault()}\r\n        date={date}\r\n        time={time}\r\n        {...rest}\r\n      />\r\n      {touched && error && (\r\n        <Label basic color=\"red\">\r\n          {error}\r\n        </Label>\r\n      )}\r\n    </Form.Field>\r\n  );\r\n};\r\n\r\nexport default DateInput;\r\n","export interface ICategory {\r\n  id: string;\r\n  name: string;\r\n  imageId: string;\r\n  imageUrl: string;\r\n}\r\n\r\nexport interface ICategoryFormValues {\r\n  file: Blob;\r\n  model:CategoryFormValues;\r\n}\r\n\r\nexport class CategoryFormValues {\r\n  name: string = \"\";\r\n}\r\n","import React, { useCallback } from 'react';\r\nimport { useDropzone } from 'react-dropzone';\r\nimport { Icon, Header } from 'semantic-ui-react';\r\n\r\ninterface IProps {\r\n  setFiles: (files: object[]) => void;\r\n}\r\n\r\nconst dropzoneStyles = {\r\n  border: 'dashed 3px',\r\n  borderColor: '#eee',\r\n  borderRadius: '5px',\r\n  paddingTop: '30px',\r\n  textAlign: 'center' as 'center',\r\n  height: '200px'\r\n};\r\n\r\nconst dropzoneActive = {\r\n  borderColor: 'green'\r\n};\r\n\r\nconst PhotoWidgetDropzone: React.FC<IProps> = ({ setFiles }) => {\r\n  const onDrop = useCallback(acceptedFiles => {\r\n    setFiles(\r\n      acceptedFiles.map((file: object) =>\r\n        Object.assign(file, {\r\n          preview: URL.createObjectURL(file)\r\n        })\r\n      )\r\n    );\r\n  }, [setFiles]);\r\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\r\n\r\n  return (\r\n    <div\r\n      {...getRootProps()}\r\n      style={\r\n        isDragActive ? { ...dropzoneStyles, ...dropzoneActive } : dropzoneStyles\r\n      }\r\n    >\r\n      <input {...getInputProps()} />\r\n      <Icon name='upload' size='huge' />\r\n      <Header content='Drop image here' />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetDropzone;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport { FORM_ERROR } from \"final-form\";\r\nimport { Form, Image, Grid, Icon, Header } from \"semantic-ui-react\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport { CategoryFormValues } from \"../../../app/models/category\";\r\nimport PhotoWidgetDropzone from \"../../../app/common/photoUpload/PhotoWidgetDropzone\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst validate = combineValidators({\r\n  name: isRequired(\"name\"),\r\n});\r\n\r\nconst dropzoneImageStyles = {\r\n  border: \"dashed 3px\",\r\n  borderColor: \"#eee\",\r\n  borderRadius: \"5px\",\r\n  textAlign: \"center\" as \"center\",\r\n  height: \"200px\",\r\n};\r\n\r\nconst emptyImageStyles = {\r\n  paddingTop: \"30px\",\r\n};\r\n\r\nconst CategoryForm = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { addCategory} = rootStore.categoryStore;\r\n\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [category] = useState(new CategoryFormValues());\r\n\r\n  const onSubmit = async (values: any) => {\r\n    values.file = files[0];\r\n    values.model = category;\r\n    values.model.name = values.name;\r\n    addCategory(values).catch((error) => ({\r\n      [FORM_ERROR]: error,\r\n    }));\r\n  };\r\n\r\n  return (\r\n    <FinalForm\r\n      onSubmit={onSubmit}\r\n      validate={validate}\r\n      render={({ handleSubmit}) => (\r\n        <Form id=\"categoryForm\" onSubmit={handleSubmit}>\r\n          <Field\r\n            name=\"name\"\r\n            component={TextInput}\r\n            placeholder=\"Category Name\"\r\n          />\r\n          <Grid>\r\n            <Grid.Column width={6}>\r\n              <PhotoWidgetDropzone setFiles={setFiles} />\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n              {files.length > 0 ? (\r\n                <Image\r\n                  style={dropzoneImageStyles}\r\n                  src={files[0].preview}\r\n                  fluid\r\n                  name=\"file\"\r\n                />\r\n              ) : (\r\n                <div style={{ ...dropzoneImageStyles, ...emptyImageStyles }}>\r\n                  <Icon name=\"image\" size=\"huge\" />\r\n                  <Header content=\"Preview Area\" />\r\n                </div>\r\n              )}\r\n            </Grid.Column>\r\n          </Grid>\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\nexport default observer(CategoryForm);\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Segment, Form, Button, Grid } from \"semantic-ui-react\";\r\nimport { ActivityFormValues } from \"../../../app/models/activity\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport TextInput from \"../../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"../../../app/common/form/TextAreaInput\";\r\nimport SelectInput from \"../../../app/common/form/SelectInput\";\r\nimport DateInput from \"../../../app/common/form/DateInput\";\r\nimport { combineDateAndTime } from \"../../../app/common/util/util\";\r\nimport {\r\n  combineValidators,\r\n  isRequired,\r\n  composeValidators,\r\n  hasLengthGreaterThan,\r\n} from \"revalidate\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\nimport CategoryForm from \"../../categories/form/CategoryForm\";\r\n\r\nconst validate = combineValidators({\r\n  title: isRequired({ message: \"The event title is required\" }),\r\n  category: isRequired(\"Category\"),\r\n  description: composeValidators(\r\n    isRequired(\"Description\"),\r\n    hasLengthGreaterThan(4)({\r\n      message: \"Description needs to be at least 5 characters\",\r\n    })\r\n  )(),\r\n  city: isRequired(\"City\"),\r\n  venue: isRequired(\"Venue\"),\r\n  date: isRequired(\"Date\"),\r\n  time: isRequired(\"Time\"),\r\n});\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityForm: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history,\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createActivity,\r\n    editActivity,\r\n    submitting,\r\n    loadActivity,\r\n  } = rootStore.activityStore;\r\n  const { categoryOptions, loadCategories,categories } = rootStore.categoryStore;\r\n  const { openModalGeneral } = rootStore.modalStore;\r\n  const [activity, setActivity] = useState(new ActivityFormValues());\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (match.params.id) {\r\n      setLoading(true);\r\n      loadActivity(match.params.id)\r\n        .then((activity) => {\r\n          setActivity(new ActivityFormValues(activity));\r\n        })\r\n        .finally(() => setLoading(false));\r\n    }\r\n    loadCategories();\r\n  }, [loadActivity, match.params.id, loadCategories]);\r\n\r\n  const handleFinalFormSubmit = (values: any) => {\r\n    const dateAndTime = combineDateAndTime(values.date, values.time);\r\n    const {date,time, ...activity } = values;\r\n    activity.date = dateAndTime;\r\n    let newCategory =categories.filter(x=>x.id===values.category.id)[0];\r\n    activity.category=newCategory;\r\n    if (!activity.id) {\r\n      let newActivity = {\r\n        ...activity,\r\n        id: uuid(),\r\n      };\r\n      createActivity(newActivity);\r\n    } else {\r\n      editActivity(activity);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <Segment clearing>\r\n          <FinalForm\r\n            validate={validate}\r\n            initialValues={activity}\r\n            onSubmit={handleFinalFormSubmit}\r\n            render={({ handleSubmit, invalid, pristine }) => (\r\n              <Form onSubmit={handleSubmit} loading={loading}>\r\n                <Field\r\n                  name=\"title\"\r\n                  placeholder=\"Title\"\r\n                  value={activity.title}\r\n                  component={TextInput}\r\n                />\r\n                <Field\r\n                  name=\"description\"\r\n                  placeholder=\"Description\"\r\n                  rows={3}\r\n                  value={activity.description}\r\n                  component={TextAreaInput}\r\n                />\r\n                <Form.Group widths=\"equal\">\r\n                  <Field\r\n                    component={SelectInput}\r\n                    name=\"category.id\"\r\n                    placeholder=\"Category\"\r\n                    options={categoryOptions}\r\n                  />\r\n                  <Button\r\n                    icon=\"add\"\r\n                    type=\"button\"\r\n                    float=\"left\"\r\n                    compact\r\n                    onClick={() =>\r\n                      openModalGeneral(\r\n                        \"Add Category\",\r\n                        <CategoryForm/>,\r\n                        null,\r\n                        \"small\",\r\n                        \"categoryForm\"\r\n                      )\r\n                    }\r\n                  />\r\n                </Form.Group>\r\n                <Form.Group widths=\"equal\">\r\n                  <Field\r\n                    component={DateInput}\r\n                    name=\"date\"\r\n                    date={true}\r\n                    placeholder=\"Date\"\r\n                    value={activity.date}\r\n                  />\r\n                  <Field\r\n                    component={DateInput}\r\n                    name=\"time\"\r\n                    time={true}\r\n                    placeholder=\"Time\"\r\n                    value={activity.time}\r\n                  />\r\n                </Form.Group>\r\n\r\n                <Field\r\n                  component={TextInput}\r\n                  name=\"city\"\r\n                  placeholder=\"City\"\r\n                  value={activity.city}\r\n                />\r\n                <Field\r\n                  component={TextInput}\r\n                  name=\"venue\"\r\n                  placeholder=\"Venue\"\r\n                  value={activity.venue}\r\n                />\r\n                <Button\r\n                  loading={submitting}\r\n                  disabled={loading || invalid || pristine}\r\n                  floated=\"right\"\r\n                  positive\r\n                  type=\"submit\"\r\n                  content=\"Submit\"\r\n                />\r\n                <Button\r\n                  onClick={\r\n                    activity.id\r\n                      ? () => history.push(`/activities/${activity.id}`)\r\n                      : () => history.push(\"/activities\")\r\n                  }\r\n                  disabled={loading}\r\n                  floated=\"right\"\r\n                  type=\"button\"\r\n                  content=\"Cancel\"\r\n                />\r\n              </Form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityForm);\r\n","import React from \"react\";\r\nimport { Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nconst LoadingComponent: React.FC<{\r\n  inverted?: boolean;\r\n  content?: string;\r\n}> = ({ inverted = true, content }) => {\r\n  return (\r\n    <Dimmer active inverted={inverted}>\r\n      <Loader content={content} />\r\n    </Dimmer>\r\n  );\r\n};\r\n\r\nexport default LoadingComponent;\r\n","import React, { useContext } from \"react\";\r\nimport { Segment, Item, Header, Button, Image } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\nconst activityImageStyle = {\r\n  filter: \"brightness(30%)\"\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n  position: \"absolute\",\r\n  bottom: \"5%\",\r\n  left: \"5%\",\r\n  width: \"100%\",\r\n  height: \"auto\",\r\n  color: \"white\"\r\n};\r\n\r\nconst ActivityDetailedHeader: React.FC<{ activity: IActivity }> = ({\r\n  activity\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { attendActivity, cancelAttendance, loading } = rootStore.activityStore;\r\n  const host = activity.attendees.filter(x => x.isHost)[0];\r\n\r\n  return (\r\n    <Segment.Group>\r\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\r\n        <Image\r\n          src={activity.category.imageUrl}\r\n          fluid\r\n          style={activityImageStyle}\r\n        />\r\n        <Segment basic style={activityImageTextStyle}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Content>\r\n                <Header\r\n                  size=\"huge\"\r\n                  content={activity.title}\r\n                  style={{ color: \"white\" }}\r\n                />\r\n                <p>{format(activity.date, \"eeee do MMMM\")}</p>\r\n                <p>\r\n                  Hosted by\r\n                  <strong>\r\n                    {\" \"}\r\n                    <Link to={`/profile/${host.username}`}>\r\n                      {host.displayName}\r\n                    </Link>\r\n                  </strong>\r\n                </p>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Segment>\r\n      </Segment>\r\n      <Segment clearing attached=\"bottom\">\r\n        {activity.isHost ? (\r\n          <Button\r\n            as={Link}\r\n            to={`/manage/${activity.id}`}\r\n            color=\"orange\"\r\n            floated=\"right\"\r\n          >\r\n            Manage Event\r\n          </Button>\r\n        ) : activity.isGoing ? (\r\n          <Button loading={loading} onClick={cancelAttendance}>\r\n            Cancel attendance\r\n          </Button>\r\n        ) : (\r\n          <Button loading={loading} onClick={attendActivity} color=\"teal\">\r\n            Join Activity\r\n          </Button>\r\n        )}\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedHeader);\r\n","import React from \"react\";\r\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\r\nimport { IActivity } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { format } from \"date-fns\";\r\n\r\nconst ActivityDetailedInfo: React.FC<{ activity: IActivity }> = ({\r\n  activity\r\n}) => {\r\n  return (\r\n    <Segment.Group>\r\n      <Segment attached=\"top\">\r\n        <Grid>\r\n          <Grid.Column width={1}>\r\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <p>{activity.description}</p>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={15}>\r\n            <span>\r\n              {format(activity.date, \"eeee do MMMM\")} at{\" \"}\r\n              {format(activity.date, \"h:mm a\")}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Grid verticalAlign=\"middle\">\r\n          <Grid.Column width={1}>\r\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\r\n          </Grid.Column>\r\n          <Grid.Column width={11}>\r\n            <span>\r\n              {activity.venue}, {activity.city}\r\n            </span>\r\n          </Grid.Column>\r\n        </Grid>\r\n      </Segment>\r\n    </Segment.Group>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedInfo);\r\n","import React, { Fragment, useContext, useEffect } from 'react';\r\nimport { Segment, Header, Form, Button, Comment } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../../app/stores/rootStore';\r\nimport {Form as FinalForm, Field} from 'react-final-form';\r\nimport { Link } from 'react-router-dom';\r\nimport TextAreaInput from '../../../app/common/form/TextAreaInput';\r\nimport { observer } from 'mobx-react-lite';\r\nimport {formatDistance} from 'date-fns';\r\n\r\nconst ActivityDetailedChat = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    createHubConnection,\r\n    stopHubConnection,\r\n    addComment,\r\n    activity\r\n  } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    createHubConnection();\r\n    return () => {\r\n      stopHubConnection();\r\n    }\r\n  }, [createHubConnection, stopHubConnection])\r\n\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign='center'\r\n        attached='top'\r\n        inverted\r\n        color='teal'\r\n        style={{ border: 'none' }}\r\n      >\r\n        <Header>Chat about this event</Header>\r\n      </Segment>\r\n      <Segment attached>\r\n        <Comment.Group>\r\n          {activity && activity.comments && activity.comments.map((comment) => (\r\n          <Comment key={comment.id}>\r\n          <Comment.Avatar src={comment.image || '/assets/user.png'} />\r\n          <Comment.Content>\r\n            <Comment.Author as={Link} to={`/profile/${comment.username}`}>{comment.displayName}</Comment.Author>\r\n            <Comment.Metadata>\r\n              <div>{formatDistance(comment.createdAt, new Date(),{includeSeconds:true})}</div>\r\n            </Comment.Metadata>\r\n            <Comment.Text>{comment.body}</Comment.Text>\r\n          </Comment.Content>\r\n        </Comment>\r\n          ))}\r\n\r\n          <FinalForm \r\n            onSubmit={addComment}\r\n            render={({handleSubmit, submitting, form}) => (\r\n              <Form onSubmit={() => handleSubmit()!.then(() => form.reset())}>\r\n              <Field \r\n                name='body'\r\n                component={TextAreaInput}\r\n                rows={2}\r\n                placeholder='Add your comment'\r\n              />\r\n              <Button\r\n                loading={submitting}\r\n                content='Add Reply'\r\n                labelPosition='left'\r\n                icon='edit'\r\n                primary\r\n              />\r\n            </Form>\r\n            )}\r\n          />\r\n\r\n        </Comment.Group>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedChat);\r\n","import React, { Fragment } from \"react\";\r\nimport { Segment, List, Item, Label, Image } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { IAttendee } from \"../../../app/models/activity\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  attendees: IAttendee[];\r\n}\r\n\r\nconst ActivityDetailedSidebar: React.FC<IProps> = ({ attendees }) => {\r\n  return (\r\n    <Fragment>\r\n      <Segment\r\n        textAlign=\"center\"\r\n        style={{ border: \"none\" }}\r\n        attached=\"top\"\r\n        secondary\r\n        inverted\r\n        color=\"teal\"\r\n      >\r\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} going\r\n      </Segment>\r\n      <Segment attached>\r\n        <List relaxed divided>\r\n          {attendees.map(attendee => (\r\n            <Item key={attendee.username} style={{ position: \"relative\" }}>\r\n              {attendee.isHost && (\r\n                <Label\r\n                  style={{ position: \"absolute\" }}\r\n                  color=\"orange\"\r\n                  ribbon=\"right\"\r\n                >\r\n                  Host\r\n                </Label>\r\n              )}\r\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Item.Header as=\"h3\">\r\n                  <Link to={`/profile/${attendee.username}`}>\r\n                    {attendee.displayName}\r\n                  </Link>\r\n                </Item.Header>\r\n                {attendee.following && (\r\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\r\n                )}\r\n              </Item.Content>\r\n            </Item>\r\n          ))}\r\n        </List>\r\n      </Segment>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetailedSidebar);\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\r\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\r\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\r\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\r\nimport ActivityDetailedSidebar from \"./ActivityDetailedSidebar\";\r\nimport { RootStoreContext } from \"../../../app/stores/rootStore\";\r\n\r\ninterface DetailParams {\r\n  id: string;\r\n}\r\n\r\nconst ActivityDetails: React.FC<RouteComponentProps<DetailParams>> = ({\r\n  match,\r\n  history\r\n}) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { activity, loadActivity, loadingInitial } = rootStore.activityStore;\r\n\r\n  useEffect(() => {\r\n    loadActivity(match.params.id);\r\n  }, [loadActivity, match.params.id, history]);\r\n\r\n  if (loadingInitial) return <LoadingComponent content=\"Loading activity...\" />;\r\n\r\n  if (!activity) return <h2>ccxx</h2>;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={10}>\r\n        <ActivityDetailedHeader activity={activity} />\r\n        <ActivityDetailedInfo activity={activity} />\r\n        <ActivityDetailedChat />\r\n      </Grid.Column>\r\n      <Grid.Column width={6}>\r\n        <ActivityDetailedSidebar attendees={activity.attendees} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ActivityDetails);\r\n","import React from 'react';\r\nimport { Segment, Button, Header, Icon } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst NotFound = () => {\r\n    return (\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search' />\r\n                Oops - we've looked everywhere but couldn't find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to Activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import React, { useContext } from \"react\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ModalContainer = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    modal: { open, body},\r\n    closeModal,\r\n    size,\r\n  } = rootStore.modalStore;\r\n  return (\r\n    <Modal open={open} onClose={closeModal} size={size}>\r\n       <Modal.Content>{body}</Modal.Content>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainer);\r\n","import React, { useContext } from \"react\";\r\nimport { Modal, Button, Message } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ModalContainerGeneral = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    modalGeneral: { open, body, header, formName },\r\n    closeModalGeneral,\r\n    size,\r\n    errorMessage,\r\n    submitting,\r\n  } = rootStore.modalStore;\r\n  return (\r\n    <Modal\r\n      size={size}\r\n      open={open}\r\n      onClose={closeModalGeneral}\r\n      closeOnEscape={false}\r\n      closeOnDimmerClick={false}\r\n    >\r\n      <Modal.Header>{header}</Modal.Header>\r\n      <Modal.Content>\r\n        {body}\r\n        {errorMessage && (\r\n          <Message negative>\r\n            <Message.Header>{errorMessage}</Message.Header>\r\n            <p>Please enter different name.</p>\r\n          </Message>\r\n        )}\r\n      </Modal.Content>\r\n      <Modal.Actions>\r\n        <Button\r\n          onClick={() => closeModalGeneral()}\r\n          type=\"button\"\r\n          content=\"Cancel\"\r\n        />\r\n        <Button\r\n          form={formName}\r\n          content=\"Add\"\r\n          primary\r\n          type=\"submit\"\r\n          loading={submitting}\r\n        />\r\n      </Modal.Actions>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalContainerGeneral);\r\n","import React from \"react\";\r\nimport {\r\n  Segment,\r\n  Item,\r\n  Header,\r\n  Button,\r\n  Grid,\r\n  Statistic,\r\n  Divider,\r\n  Reveal\r\n} from \"semantic-ui-react\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps {\r\n  profile: IProfile;\r\n  isCurrentUser: boolean;\r\n  loading: boolean;\r\n  follow: (username: string) => void;\r\n  unfollow: (username: string) => void;\r\n}\r\n\r\nconst ProfileHeader: React.FC<IProps> = ({\r\n  profile,\r\n  isCurrentUser,\r\n  loading,\r\n  follow,\r\n  unfollow\r\n}) => {\r\n  return (\r\n    <Segment>\r\n      <Grid>\r\n        <Grid.Column width={12}>\r\n          <Item.Group>\r\n            <Item>\r\n              <Item.Image\r\n                avatar\r\n                size=\"small\"\r\n                src={profile.image || \"/assets/user.png\"}\r\n              />\r\n              <Item.Content verticalAlign=\"middle\">\r\n                <Header as=\"h1\">{profile.displayName}</Header>\r\n              </Item.Content>\r\n            </Item>\r\n          </Item.Group>\r\n        </Grid.Column>\r\n        <Grid.Column width={4}>\r\n          <Statistic.Group widths={2}>\r\n            <Statistic label=\"Followers\" value={profile.followersCount} />\r\n            <Statistic label=\"Following\" value={profile.followingCount} />\r\n          </Statistic.Group>\r\n          <Divider />\r\n          {!isCurrentUser && (\r\n            <Reveal animated=\"move\">\r\n              <Reveal.Content visible style={{ width: \"100%\" }}>\r\n                <Button\r\n                  fluid\r\n                  color=\"teal\"\r\n                  content={profile.following ? \"Following\" : \"Not following\"}\r\n                />\r\n              </Reveal.Content>\r\n              <Reveal.Content hidden>\r\n                <Button\r\n                  loading={loading}\r\n                  fluid\r\n                  basic\r\n                  color={profile.following ? \"red\" : \"green\"}\r\n                  content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n                  onClick={\r\n                    profile.following\r\n                      ? () => unfollow(profile.username)\r\n                      : () => follow(profile.username)\r\n                  }\r\n                />\r\n              </Reveal.Content>\r\n            </Reveal>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Segment>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileHeader);\r\n","import React, { useRef } from 'react';\r\nimport Cropper from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css';\r\n\r\ninterface IProps {\r\n  setImage: (file: Blob) => void;\r\n  imagePreview: string;\r\n}\r\n\r\nconst PhotoWidgetCropper: React.FC<IProps> = ({ setImage, imagePreview }) => {\r\n  const cropper = useRef<Cropper>(null);\r\n\r\n  const cropImage = () => {\r\n    if (\r\n      cropper.current &&\r\n      typeof cropper.current.getCroppedCanvas() === 'undefined'\r\n    ) {\r\n      return;\r\n    }\r\n    cropper &&\r\n      cropper.current &&\r\n      cropper.current.getCroppedCanvas().toBlob((blob: any) => {\r\n        setImage(blob);\r\n      }, 'image/jpeg');\r\n  };\r\n\r\n  return (\r\n    <Cropper\r\n      ref={cropper}\r\n      src={imagePreview}\r\n      style={{ height: 200, width: '100%' }}\r\n      // Cropper.js options\r\n      aspectRatio={1 / 1}\r\n      preview='.img-preview'\r\n      guides={false}\r\n      viewMode={1}\r\n      dragMode='move'\r\n      scalable={true}\r\n      cropBoxMovable={true}\r\n      cropBoxResizable={true}\r\n      crop={cropImage}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PhotoWidgetCropper;\r\n","import React, { Fragment, useState, useEffect } from 'react';\r\nimport { Header, Grid, Button } from 'semantic-ui-react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone';\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\n\r\ninterface IProps {\r\n  loading: boolean;\r\n  uploadPhoto: (file: Blob) => void;\r\n}\r\n\r\nconst PhotoUploadWidget: React.FC<IProps> = ({ loading, uploadPhoto }) => {\r\n  const [files, setFiles] = useState<any[]>([]);\r\n  const [image, setImage] = useState<Blob | null>(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      files.forEach(file => URL.revokeObjectURL(file.preview));\r\n    };\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid>\r\n        <Grid.Column width={4}>\r\n          <Header color='teal' sub content='Step 1 - Add Photo' />\r\n          <PhotoWidgetDropzone setFiles={setFiles} />\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 2 - Resize image' />\r\n          {files.length > 0 && (\r\n            <PhotoWidgetCropper\r\n              setImage={setImage}\r\n              imagePreview={files[0].preview}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={1} />\r\n        <Grid.Column width={4}>\r\n          <Header sub color='teal' content='Step 3 - Preview & Upload' />\r\n          {files.length > 0 && (\r\n            <Fragment>\r\n              <div\r\n                className='img-preview'\r\n                style={{ minHeight: '200px', overflow: 'hidden' }}\r\n              />\r\n              <Button.Group widths={2}>\r\n                <Button\r\n                  positive\r\n                  icon='check'\r\n                  loading={loading}\r\n                  onClick={() => uploadPhoto(image!)}\r\n                />\r\n                <Button\r\n                  icon='close'\r\n                  disabled={loading}\r\n                  onClick={() => setFiles([])}\r\n                />\r\n              </Button.Group>\r\n            </Fragment>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default observer(PhotoUploadWidget);\r\n","import React, { useContext, useState } from 'react';\r\nimport { Tab, Header, Card, Image, Button, Grid } from 'semantic-ui-react';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\nimport PhotoUploadWidget from '../../app/common/photoUpload/PhotoUploadWidget';\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst ProfilePhotos = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    profile,\r\n    isCurrentUser,\r\n    uploadPhoto,\r\n    uploadingPhoto,\r\n    setMainPhoto,\r\n    deletePhoto,\r\n    loading\r\n  } = rootStore.profileStore;\r\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n  const [target, setTarget] = useState<string | undefined>(undefined);\r\n  const [deleteTarget, setDeleteTarget] = useState<string | undefined>(\r\n    undefined\r\n  );\r\n\r\n  const handleUploadImage = (photo: Blob) => {\r\n    uploadPhoto(photo).then(() => setAddPhotoMode(false));\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16} style={{ paddingBottom: 0 }}>\r\n          <Header floated='left' icon='image' content='Photos' />\r\n          {isCurrentUser && (\r\n            <Button\r\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\r\n              floated='right'\r\n              basic\r\n              content={addPhotoMode ? 'Cancel' : 'Add Photo'}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {addPhotoMode ? (\r\n            <PhotoUploadWidget\r\n              uploadPhoto={handleUploadImage}\r\n              loading={uploadingPhoto}\r\n            />\r\n          ) : (\r\n            <Card.Group itemsPerRow={5}>\r\n              {profile &&\r\n                profile.photos.map(photo => (\r\n                  <Card key={photo.id}>\r\n                    <Image src={photo.url} />\r\n                    {isCurrentUser && (\r\n                      <Button.Group fluid widths={2}>\r\n                        <Button\r\n                          onClick={e => {\r\n                            setMainPhoto(photo);\r\n                            setTarget(e.currentTarget.name);\r\n                          }}\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          loading={loading && target === photo.id}\r\n                          basic\r\n                          positive\r\n                          icon='check'\r\n                        />\r\n                        <Button\r\n                          name={photo.id}\r\n                          disabled={photo.isMain}\r\n                          onClick={(e) => {\r\n                            deletePhoto(photo);\r\n                            setDeleteTarget(e.currentTarget.name)\r\n                          }}\r\n                          loading={loading && deleteTarget === photo.id}\r\n                          basic\r\n                          negative\r\n                          icon='trash'\r\n                        />\r\n                      </Button.Group>\r\n                    )}\r\n                  </Card>\r\n                ))}\r\n            </Card.Group>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePhotos);\r\n","import React from \"react\";\r\nimport { Form as FinalForm, Field } from \"react-final-form\";\r\nimport { IProfile } from \"../../app/models/profile\";\r\nimport { combineValidators, isRequired } from \"revalidate\";\r\nimport { Form, Button } from \"semantic-ui-react\";\r\nimport TextInput from \"../../app/common/form/TextInput\";\r\nimport TextAreaInput from \"../../app/common/form/TextAreaInput\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nconst validate = combineValidators({\r\n  displayName: isRequired(\"displayName\")\r\n});\r\ninterface IProps {\r\n  updateProfile: (profile: Partial<IProfile>) => void;\r\n  profile: IProfile;\r\n}\r\n\r\nconst ProfileEditForm: React.FC<IProps> = ({ updateProfile, profile }) => {\r\n  return (\r\n    <FinalForm\r\n      onSubmit={updateProfile}\r\n      initialValues={profile!}\r\n      validate={validate}\r\n      render={({ handleSubmit, submitting, invalid, pristine }) => (\r\n        <Form onSubmit={handleSubmit} error>\r\n          <Field\r\n            name=\"displayName\"\r\n            placeholder=\"Display Name\"\r\n            component={TextInput}\r\n            value={profile!.displayName}\r\n          />\r\n          <Field\r\n            name=\"bio\"\r\n            component={TextAreaInput}\r\n            rows={3}\r\n            placeholder=\"Bio\"\r\n            value={profile!.bio}\r\n          />\r\n          <Button\r\n            loading={submitting}\r\n            floated=\"right\"\r\n            disabled={invalid || pristine}\r\n            positive\r\n            content=\"Update Profile\"\r\n          />\r\n        </Form>\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEditForm);\r\n","import React, { useContext, useState } from \"react\";\r\nimport { Tab, Grid, Header, Button } from \"semantic-ui-react\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\nconst ProfileDescription = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { updateProfile, profile, isCurrentUser } = rootStore.profileStore;\r\n  const [editMode, setEditMode] = useState(false);\r\n  return (\r\n    <Tab.Pane>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header\r\n            floated=\"left\"\r\n            icon=\"user\"\r\n            content={`About ${profile!.displayName}`}\r\n          />\r\n          {isCurrentUser && (\r\n            <Button\r\n              onClick={() => setEditMode(!editMode)}\r\n              floated=\"right\"\r\n              basic\r\n              content={editMode ? \"Cancel\" : \"Edit Profile\"}\r\n            />\r\n          )}\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          {editMode ? (\r\n            <ProfileEditForm updateProfile={updateProfile} profile={profile!} />\r\n          ) : (\r\n            <span>{profile!.bio}</span>\r\n          )}\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileDescription);\r\n","import React from 'react';\nimport { Card, Image, Icon} from 'semantic-ui-react';\nimport { Link } from 'react-router-dom';\nimport { IProfile } from '../../app/models/profile';\n\ninterface IProps {\n    profile: IProfile\n}\n\nconst ProfileCard: React.FC<IProps> = ({profile}) => {\n  return (\n    <Card as={Link} to={`/profile/${profile.username}`}>\n      <Image src={profile.image || '/assets/user.png'} />\n      <Card.Content>\n        <Card.Header>{profile.displayName}</Card.Header>\n      </Card.Content>\n      <Card.Content extra>\n        <div>\n          <Icon name='user' />\n          {profile.followersCount} Followers\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default ProfileCard;\n","import React, { useContext } from 'react';\nimport { Tab, Grid, Header, Card } from 'semantic-ui-react';\nimport { RootStoreContext } from '../../app/stores/rootStore';\nimport ProfileCard from './ProfileCard';\n\nconst ProfileFollowings = () => {\n  const rootStore = useContext(RootStoreContext);\n  const {\n    profile,\n    followings,\n    loading,\n    activeTab\n  } = rootStore.profileStore;\n  return (\n    <Tab.Pane loading={loading}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated='left'\n            icon='user'\n            content={\n              activeTab === 3\n                ? `People following ${profile!.displayName}`\n                : `People ${profile!.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group itemsPerRow={5}>\n            {followings.map(profile => (\n              <ProfileCard key={profile.username} profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n};\n\nexport default ProfileFollowings;\n","import React, { useEffect, useContext } from 'react';\r\nimport { observer } from 'mobx-react-lite';\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from 'semantic-ui-react';\r\nimport { Link } from 'react-router-dom';\r\nimport { IUserActivity } from '../../app/models/profile';\r\nimport { format } from 'date-fns';\r\nimport { RootStoreContext } from '../../app/stores/rootStore';\r\n\r\nconst panes = [\r\n  { menuItem: 'Future Events', pane: { key: 'futureEvents' } },\r\n  { menuItem: 'Past Events', pane: { key: 'pastEvents' } },\r\n  { menuItem: 'Hosting', pane: { key: 'hosted' } }\r\n];\r\n\r\nconst ProfileEvents = () => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadUserActivities,\r\n    profile,\r\n    loadingActivities,\r\n    userActivities\r\n  } = rootStore.profileStore!;\r\n\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n\r\n  const handleTabChange = (\r\n    e: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    data: TabProps\r\n  ) => {\r\n    let predicate;\r\n    switch (data.activeIndex) {\r\n      case 1:\r\n        predicate = 'past';\r\n        break;\r\n      case 2:\r\n        predicate = 'hosting';\r\n        break;\r\n      default:\r\n        predicate = 'future';\r\n        break;\r\n    }\r\n    loadUserActivities(profile!.username, predicate);\r\n  };\r\n\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated='left' icon='calendar' content={'Activities'} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: IUserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={activity.category}\r\n                  style={{ minHeight: 100, objectFit: 'cover' }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign='center'>{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign='center'>\r\n                    <div>{format(new Date(activity.date), 'do LLL')}</div>\r\n                    <div>{format(new Date(activity.date), 'h:mm a')}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n};\r\n\r\nexport default observer(ProfileEvents);\r\n","import React from \"react\";\r\nimport { Tab } from \"semantic-ui-react\";\r\nimport ProfilePhotos from \"./ProfilePhotos\";\r\nimport ProfileDescription from \"./ProfileDescription\";\r\nimport ProfileFollowings from \"./ProfileFollowings\";\r\nimport ProfileActivities from \"./ProfileActivities\";\r\n\r\nconst panes = [\r\n  { menuItem: \"About\", render: () => <ProfileDescription /> },\r\n  { menuItem: \"Photos\", render: () => <ProfilePhotos /> },\r\n  {\r\n    menuItem: \"Activities\",\r\n    render: () => <ProfileActivities />\r\n  },\r\n  { menuItem: \"Followers\", render: () => <ProfileFollowings /> },\r\n  { menuItem: \"Following\", render: () => <ProfileFollowings /> }\r\n];\r\n\r\ninterface IProps {\r\n  setActiveTab: (activeIndex: any) => void;\r\n}\r\n\r\nconst ProfileContent: React.FC<IProps> = ({ setActiveTab }) => {\r\n  return (\r\n    <Tab\r\n      menu={{ fluid: true, vertical: true }}\r\n      menuPosition=\"right\"\r\n      panes={panes}\r\n      onTabChange={(e, data) => setActiveTab(data.activeIndex)}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ProfileContent;\r\n","import React, { useContext, useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileHeader from \"./ProfileHeader\";\r\nimport ProfileContent from \"./ProfileContent\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { RootStoreContext } from \"../../app/stores/rootStore\";\r\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface RouteParams {\r\n  username: string;\r\n}\r\n\r\ninterface IProps extends RouteComponentProps<RouteParams> {}\r\n\r\nconst ProfilePage: React.FC<IProps> = ({ match }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const {\r\n    loadingProfile,\r\n    profile,\r\n    loadProfile,\r\n    follow,\r\n    unfollow,\r\n    isCurrentUser,\r\n    loading,\r\n    setActiveTab\r\n  } = rootStore.profileStore;\r\n\r\n  useEffect(() => {\r\n    loadProfile(match.params.username);\r\n  }, [loadProfile, match]);\r\n\r\n  if (loadingProfile) return <LoadingComponent content=\"Loading profile...\" />;\r\n\r\n  return (\r\n    <Grid>\r\n      <Grid.Column width={16}>\r\n        <ProfileHeader\r\n          profile={profile!}\r\n          isCurrentUser={isCurrentUser}\r\n          follow={follow}\r\n          unfollow={unfollow}\r\n          loading={loading}\r\n        />\r\n        <ProfileContent setActiveTab={setActiveTab} />\r\n      </Grid.Column>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default observer(ProfilePage);\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  RouteProps,\r\n  RouteComponentProps,\r\n  Route,\r\n  Redirect\r\n} from \"react-router-dom\";\r\nimport { RootStoreContext } from \"../stores/rootStore\";\r\nimport { observer } from \"mobx-react-lite\";\r\n\r\ninterface IProps extends RouteProps {\r\n  component: React.ComponentType<RouteComponentProps<any>>;\r\n}\r\n\r\nconst PrivateRoute: React.FC<IProps> = ({ component: Component, ...rest }) => {\r\n  const rootStore = useContext(RootStoreContext);\r\n  const { isLoggedIn } = rootStore.userStore;\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to={\"/\"} />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(PrivateRoute);\r\n","import React, { Fragment, useContext, useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"../../features/nav/NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport {\n  Route,\n  withRouter,\n  RouteComponentProps,\n  Switch\n} from \"react-router-dom\";\nimport Homepage from \"../../features/home/Homepage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetails from \"../../features/activities/details/ActivityDetails\";\nimport NotFound from \"./NotFound\";\nimport { ToastContainer } from \"react-toastify\";\nimport { RootStoreContext } from \"../stores/rootStore\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ModalContainerGeneral from \"../common/modals/ModelContainerGeneral\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nconst App: React.FC<RouteComponentProps> = ({ location }) => {\n  const rootStore = useContext(RootStoreContext);\n  const { setAppLoaded, token, appLoaded } = rootStore.commonStore;\n  const { getUser } = rootStore.userStore;\n\n  useEffect(() => {\n    if (token) {\n      getUser().finally(() => setAppLoaded());\n    } else {\n      setAppLoaded();\n    }\n  }, [getUser, setAppLoaded, token]);\n\n  if (!appLoaded) return <LoadingComponent content=\"Loading app...\" />;\n\n  return (\n    <Fragment>\n      <ModalContainer/>\n      <ModalContainerGeneral/>\n      <ToastContainer position=\"bottom-right\"/>\n      <Route exact path=\"/\" component={Homepage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <Fragment>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute\n                  exact\n                  path=\"/activities\"\n                  component={ActivityDashboard}\n                />\n                <PrivateRoute\n                  path=\"/activities/:id\"\n                  component={ActivityDetails}\n                />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", \"/manage/:id\"]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute\n                  path=\"/profile/:username\"\n                  component={ProfilePage}\n                />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </Fragment>\n        )}\n      />\n    </Fragment>\n  );\n};\n\nexport default withRouter(observer(App));\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { useEffect } from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst ScrollToTop = ({ children, location: { pathname } }: any) => {\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return children;\r\n};\r\n\r\nexport default withRouter(ScrollToTop);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport 'react-widgets/dist/css/react-widgets.css';\nimport 'semantic-ui-css/semantic.min.css'\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\nimport dateFnsLocalizer from 'react-widgets-date-fns';\n\ndateFnsLocalizer();\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <Router history={history}>\n    <ScrollToTop>\n      <App />\n    </ScrollToTop>\n  </Router>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}